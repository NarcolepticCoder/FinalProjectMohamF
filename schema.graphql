schema {
  query: Query
  mutation: Mutation
}

"Defines when a policy shall be executed."
enum ApplyPolicy {
  "Before the resolver was executed."
  BEFORE_RESOLVER
  "After the resolver was executed."
  AFTER_RESOLVER
  "The policy is applied in the validation step before the execution."
  VALIDATION
}

type Query {
  users: [User!]!
  roles: [Roles!]!
  securityEvents(userClaims: [String!]): [SecurityEvents!]!
  userClaims(externalId: String!): [ClaimDto!]!
}

type Mutation {
  assignUserRole(userId: UUID! roleId: UUID! authorUserId: UUID!): AssignRoleResultDto!
  auditLogin(input: AuditDtoInput!): String!
  auditLogout(input: AuditDtoInput!): String!
}

type ClaimDto {
  type: String!
  value: String!
}

type SecurityEvents {
  id: UUID!
  eventType: String!
  occurredUtc: DateTime!
  details: String
  authorUserId: UUID!
  authorUser: User!
  affectedUserId: UUID!
  affectedUser: User!
}

type Roles {
  id: UUID!
  name: String!
  description: String
  users: [User!]!
  roleClaim: [RoleClaims!]!
}

type User {
  id: UUID!
  externalId: String!
  email: String!
  roleId: UUID!
  role: Roles!
  authoredEvents: [SecurityEvents!]!
  affectedEvents: [SecurityEvents!]!
}

type AssignRoleResultDto {
  authorUser: User!
  affectedUser: User!
  fromRole: String!
  toRole: String!
}

scalar UUID

input AuditDtoInput {
  email: String!
  externalId: String!
  provider: String
}

type RoleClaims {
  roleId: UUID!
  role: Roles!
  claimId: UUID!
  claim: Claims!
}

"The `DateTime` scalar represents an ISO-8601 compliant date time type."
scalar DateTime

type Claims {
  id: UUID!
  type: String!
  value: String!
  roleClaim: [RoleClaims!]!
}

"The purpose of the `cost` directive is to define a `weight` for GraphQL types, fields, and arguments. Static analysis can use these weights when calculating the overall cost of a query or response."
directive @cost("The `weight` argument defines what value to add to the overall cost for every appearance, or possible appearance, of a type, field, argument, etc." weight: String!) on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM | INPUT_FIELD_DEFINITION