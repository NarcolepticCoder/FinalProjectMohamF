@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Components.Authorization

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">ServerApp</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
    </nav>
</div>

<AuthorizeView>
    <Authorized>
        <button class="btn btn-secondary" @onclick="SignOut">Sign out</button>
        <button class="btn btn-primary" @onclick="RolesAssign">Assign roles</button>
        <button class="btn btn-primary" @onclick="Audit">Audit log page</button>
    </Authorized>
    <NotAuthorized>
        <button class="btn btn-primary" @onclick='@(() => SignIn("Okta"))'>Sign in with Okta</button>
        <button class="btn btn-danger" @onclick='@(() => SignIn("Google"))'>Sign in with Google</button>
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    void RolesAssign()
    {
        Navigation.NavigateTo("/roles/assign");
    }
    void Audit()
    {
        Navigation.NavigateTo("/audit");
    }
    void SignIn(string provider)
    {
        Navigation.NavigateTo($"/Account/SignIn?provider={provider}&returnUrl=/", forceLoad: true);
    }

    void SignOut()
    {
        Navigation.NavigateTo("/Account/SignOut?returnUrl=/", forceLoad: true);
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
